<configure xmlns="http://namespaces.repoze.org/bfg"
    xmlns:lemonade="http://namespaces.repoze.org/lemonade">

  <include package="repoze.lemonade.includes" file="meta.zcml" />

   <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.handle_content_removed"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.index_content"/>
<!--
  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".contentfeeds.user_added_content"/>
-->
  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectWillBeAddedEvent"
      handler=".subscribers.set_created"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.set_modified"/>
<!--
  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".contentfeeds.user_modified_content"/>
-->
  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.reindex_content"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.set_modified"/>

  <subscriber
      for=".interfaces.ICommunity
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.delete_community"/>
  

<!--
  <subscriber
      for=".interfaces.IUserAddedGroup"
      handler=".subscribers.reindex_profile_after_group_change"/>

  <subscriber
      for=".interfaces.IUserAddedGroup"
      handler=".contentfeeds.user_joined_community"/>

 
  <subscriber
      for=".interfaces.IUserRemovedGroup"
      handler=".contentfeeds.user_left_community"/>

  <subscriber
      for=".tagging.interfaces.ITagAddedEvent"
      handler=".contentfeeds.user_tagged_content"/>
-->
 
  <subscriber
      for=".interfaces.ICatalogQueryEvent"
      handler=".subscribers.log_query"/>

   <subscriber
      for=".interfaces.IProfile
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.reindex_content"/>
<!--  
   No need to re-index the peoples catalog as we are not using it
   todo: remove these    
  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.profile_added"/>

  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.profile_removed"/>

  <subscriber
      for=".interfaces.IProfile
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.profile_added"/>
-->
 
  <lemonade:content
      factory=".community.Community"
      type=".interfaces.ICommunity"
      />

  <lemonade:content
      factory=".profile.Profile"
      type=".interfaces.IProfile"
      />

  <adapter
    for=".interfaces.ICommunity
          repoze.bfg.interfaces.IRequest"
    provides=".interfaces.ICommunityInfo"
    factory=".adapters.CommunityInfo"
  />

  <!-- XXX Multi-adapter with IRequest not really necessary.
           This should be deprecated, with registration immediately
           following being the preferred way to get a CatalogSearch. -->
  <adapter
    for="zope.interface.Interface
         repoze.bfg.interfaces.IRequest"
    provides=".interfaces.ICatalogSearch"
    factory=".adapters.CatalogSearch"
  />

  <adapter
    for="zope.interface.Interface"
    provides=".interfaces.ICatalogSearch"
    factory=".adapters.CatalogSearch"
    />

  <adapter
    for="zope.interface.Interface
         repoze.bfg.interfaces.IRequest"
    provides=".interfaces.ITagQuery"
    factory=".adapters.TagQuery"
  />

  <adapter
    for="repoze.lemonade.interfaces.IContent
          repoze.bfg.interfaces.IRequest"
    provides=".interfaces.IGridEntryInfo"
    factory=".adapters.GridEntryInfo"
  />

  <utility
    provides=".interfaces.ICatalogSearchCache"
    component=".catalog.cache"
  />

 
  <lemonade:content
      factory=".site.Site"
      type=".interfaces.ISite"
      />

  <lemonade:content
      factory=".community.CommunitiesFolder"
      type=".interfaces.ICommunities"
      />

  <lemonade:content
      factory=".profile.ProfilesFolder"
      type=".interfaces.IProfiles"
      />

<!--
  <lemonade:content
      factory=".feedstorage.FeedsContainer"
      type=".interfaces.IFeedsContainer"
      />

  <lemonade:content
      factory=".feedstorage.Feed"
      type=".interfaces.IFeed"
      />
-->
</configure>
